" Configurações diversas {{{

set t_Co=256        "Informa suporte a 256 cores
set encoding=utf-8
set fileencoding=utf-8
" set spell spelllang=en,pt
" set spellcapcheck=[.?!]\_[\])'" \t]\+
set ruler           "Mostra linha:coluna
set signcolumn=yes
set mouse=a         "Ativa o suporte ao mouse (para selecionar texto p.e.)
set hidden          "Permite mudar de buffer sem salvar as alterações realizadas
set nocompatible    "Desabilita compatibilidade com VI
set number          "Mostra numero da linha
" set relativenumber  "Mostra numero da linha de forma hibrida (relativa mas mostrando a atual)
set nowrap          "Desabilita quebra de linha
set wrapscan        "Search wrap at the end of the file
set breakindent     "Ao quebrar a linha, manter a identação
set expandtab       "Troca tabs por espaços
set tabstop=2       "Quantidade de espaços do tab
set shiftwidth=2    "Quantidade de espaços do tab
set cindent         "Identação padrão C
set softtabstop=2   "Faz o backspace tratar 2 espaços como tab
set backspace=indent,eol,start
set ignorecase      "Buscas case insensitive
set incsearch       "Destaca resultado da busca enquanto digita
set hlsearch        "Destaca todas as ocorrências da busca
set nobackup        "Desabilita o uso de arquivos de backup
set autoread        "Recarrega arquivo se alterado externamente
set nostartofline   "Permanece na mesma coluna ao mudar de linha
set warn            "Warning when a shell cmd is used while the buffer has been changed.
set shortmess+=I    "Start without the intro message
set shortmess+=s    "Suppress 'search hit BOTTOM, continuing at TOP' message
set shortmess+=tT   "Truncate long filenames/messages
set shortmess+=a    "No 'Hit ENTER to continue'
set nowritebackup   "Do not create backup file
set noswapfile      "Do not create a swap file
set laststatus=2    " Always show the status line
set scrolloff=2     " Mostra pelo menos 2 linhas acima e abaixo do cursor
set sidescroll=1    " min. number of columns to scroll horizontally.
set sidescrolloff=2 " min. number of columns to keep to the left/right of the cursor
set path+=**        " Search down into subfolders. Provides tab-completion for all file-related tasks
set dictionary=/usr/share/dict/words,/usr/share/dict/brazilian
set complete+=k
set ttyfast
set clipboard=unnamedplus "Copy to the X Window clipboard
set wildmenu        " Display all matching files when we tab complete
set wildmode=full
set wildignore+=*.so,*~,*/.git/*
set foldmethod=syntax
set nofoldenable
set splitright
" set splitbelow
set noerrorbells
set novisualbell
set nomodeline
set t_vb=
" set cursorline
set conceallevel=1
set confirm
set history=2000
set timeoutlen=500
set updatetime=300
set showmatch       " Show the matching bracket, paren etc
set matchpairs+=<:> " Add HTML brackets to pair matching
set matchtime=1     " Tenths of a second to show the matching paren
set list
set fillchars=stl:\=,stlnc:\-,vert:\|,fold:-,diff:-
set listchars=tab:▸\ ,trail:·,precedes:…,extends:…,nbsp:‗

set statusline= "Limpa qualquer definição anterior
set statusline+=%#LineNr#               "Seta a cor do grupo 'LineNr'
set statusline+=%f                      "Path do arquivo no buffer atual
set statusline+=\ %m                    "Flag indicando se o arquivo foi modificado '[+]'
set statusline+=\[%{FugitiveStatusline()}\]  "Indica o branch do arquivo atual
set statusline+=%=                      "Marca o fim dos itens alinhados a esquerda e inicio dos alinhados a direita
set statusline+=%#Special#              "Seta a cor do grupo 'Special'
set statusline+=\ %y                    "Espaço em branco e o tipo do arquivo
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}  "Espaço em branco e tipo de encoding
set statusline+=\ \[%{&fileformat}\]    "Espaço em branco e o formato do arquivo 'unix/dos'
set statusline+=\ %p%%                  "Percentagem do arquivo
set statusline+=\ %l:%c                 "Linha e coluna
set statusline+=\                       "Espaço em branco

"}}}

" Configuração de plugins {{{

" Install and run vim-plug on first run
if empty(glob('~/.vim/autoload/plug.vim'))
    silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
    autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Install the plugins on this list
source ~/.vim/plugins.vim

" Rust
let g:rustfmt_autosave = 1
let g:cargo_makeprg_params = 'build --release --message-format short'

" FZF.vim
let $FZF_DEFAULT_COMMAND="rg --files  --hidden -g '!{.cache/**,music/**,games/**,**/.git/**}'"
let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.8, 'highlight': 'Todo' } }
let g:fzf_preview_window = 'right:50%'


let g:markdown_fenced_languages = ['python','javascript']
let g:vista_icon_indent = ["╰─▸ ", "├─▸ "]

"}}}

" Mapeamentos de tecla {{{

"Mapeamentos do modo normal
nmap <C-_> :TComment<CR>
nmap <C-S-Left> <C-w><
nmap <C-S-Right> <C-w>>
nmap <C-S-Up> <C-W>+<C-W>+
nmap <C-S-Down> <C-W>-<C-W>-
nmap <space> viw
nmap - dd
nmap " ciw"<ESC>p
nmap ' `

nmap <leader>do <Plug>(coc-codeaction)
nmap <leader>rn <Plug>(coc-rename)

"F3: limpa o destaque nas palavras após uma busca
nnoremap <silent> <F2> :set invlist<CR>
nnoremap <silent> <F3> :set hlsearch! hlsearch?<CR>
nnoremap <silent> <F4> :bd<CR>
nnoremap <silent> <F5> :source ~/.vim/vimrc<CR>
nnoremap <silent> <F6> :edit ~/.vim/vimrc<CR>
nnoremap <silent> <F7> :cn<CR>
nnoremap <silent> <F8> :cp<CR>
nnoremap <silent> <F9> :Make<CR>
nnoremap <silent> <F10> :Vista!!<CR>

nnoremap <S-F4> :bd!<CR>
nnoremap <C-Left> <ESC>:bp<CR>
nnoremap <C-Right> <ESC>:bn<CR>
nnoremap <C-p> :Files <CR>
nnoremap <C-g> :Rg <CR>
nnoremap <C-b> :Buffers <CR>
" nnoremap <C-j> :call CocAction('diagnosticNext')<CR>
" nnoremap <C-k> :call CocAction('diagnosticPrevious')<CR>

" Use `[g` and `]g` to navigate diagnostics
" Use `:CocDiagnostics` to get all diagnostics of current buffer in location list.
nmap <silent>[g <Plug>(coc-diagnostic-prev)
nmap <silent>]g <Plug>(coc-diagnostic-next)
" GoTo code navigation.
nmap <silent>gd <Plug>(coc-definition)
nmap <silent>gy <Plug>(coc-type-definition)
nmap <silent>gi <Plug>(coc-implementation)
nmap <silent>gr <Plug>(coc-references)
nmap <leader>ac <Plug>(coc-codeaction)
nmap <leader>f <Plug>(coc-fix-current)

" shortcuts for 3-way merge
map <Leader>1 :diffget LOCAL<CR>
map <Leader>2 :diffget BASE<CR>
map <Leader>3 :diffget REMOTE<CR>

"Mapeamentos do modo de inserção
inoremap " ""<left>
inoremap ' ''<left>
inoremap ( ()<left>
inoremap [ []<left>
inoremap { {}<left>
inoremap {<CR> {<CR>}<ESC>O

"}}}

" Comandos {{{

command! -nargs=0 Format :CocCommand prettier.formatFile

"Uma pequena mensagem ao iniciar...
augroup greeting
    autocmd!
    autocmd VimEnter * :echo "Olá Ricardo  >^.^<"
augroup END

augroup configgroup
    autocmd!
    "Desativa a troca de tab por espaços quando o arquivo for um makefile
    autocmd BufEnter Makefile setlocal noexpandtab
    " autocmd BufWritePost *.c exe ":Dispatch! ctags -R ."
    " autocmd FileType yaml setlocal ts=2 sts=2 sw=2 expandtab
augroup END

"}}}

" Modificações de cor e sintaxe {{{

"Ativa o reconhecimento de sintaxe e padrão de cores
filetype plugin on
syntax on
colorscheme vimdark

" Altera definições de cor
highlight VimwikiMarkers ctermbg=black ctermfg=darkred
highlight yamlKey    ctermbg=black ctermfg=244
" highlight DiffAdd ctermbg=black ctermfg=green
highlight SignifySignAdd ctermbg=black ctermfg=green
highlight SignifySignDelete ctermbg=black ctermfg=red
highlight SignifySignChange ctermbg=black ctermfg=yellow
highlight MatchParen cterm=bold ctermbg=none ctermfg=red
"}}}
